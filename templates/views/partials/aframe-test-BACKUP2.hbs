<script src="/socket.io/socket.io.js"></script>
<script src="/js/components/evil.js" type="text/javascript"></script>
<script src="/js/components/frame.js" type="text/javascript"></script>
<script src="/js/components/exit_frame.js" type="text/javascript"></script>
<script src="/js/components/chamber.js" type="text/javascript"></script>
<script src="/js/components/chamber_sign.js" type="text/javascript"></script>
<script src="/js/components/chamber_exit.js" type="text/javascript"></script>
<script src="/js/components/chamber_title.js" type="text/javascript"></script>
<script src="/js/components/chamber_video.js" type="text/javascript"></script>
<script src="/js/components/chamber_image.js" type="text/javascript"></script>
<script src="/js/components/text_plane.js" type="text/javascript"></script>
<script>
//TODO: remove all playertostring replace with "var pos"
//TODO: remove all animations once they are done and remove listeners associated with it like in killAllAnimations function
//TODO: check how it works if you select category then while it flies cut off internet so the post fails, it sohuld retry every 10 seconds the post //while in chamber
var evil,category=0,outterRing,player,playerToString,par,projectIndex=-1,projects,ch,projectVideo,numOfChamberSigns,numOfProjects,numOfImages,projectHasVideo=false,
categories={{{jsonView data.categoriesNames}}},numOfCategories=categories.length;

/////////////////////////////
	////////////////////////////
	/////FASTER
	/////////////////////
	var speedMult=0.02;

/////////////////////////////////////
//SOCKET.IO Bullshit
/////////////////////////////////////
var socket = io();
socket.on('news', function (data) {
//socket.emit('fromClient', { my: 'data' });
console.log("web socket says: "+data);});

socket.on('projectsData', function (data) {
	projects=data;
	numOfProjects=projects.length;
});

socket.on('projectVideo', function (data) {
	projectVideo=data.toString();
	createVideoShit();
	projectHasVideo=true;
});

/////////////////////////////////////
//ONLOAD Init function broh
/////////////////////////////////////
window.onload = function () {	
	outterRing=document.querySelector('#outter-ring');
	player=document.querySelector('#player');
	assets=document.querySelector('a-assets');
	evil=document.querySelector('[evil]').components.evil;
}
/////////////////////////////////////
//MAIN functions
/////////////////////////////////////
function strip(html)
{
   var tmp = document.createElement("DIV"),
   reducedHTML=html.replace(/<\/p>/gm, "\n");   
   if(reducedHTML.length>592){
   	reducedHTML=reducedHTML.substring(0,592)+"...";	
   }
   //reducedHTML="\n"+reducedHTML+"\n";   
   tmp.innerHTML = reducedHTML;
   return tmp.textContent||tmp.innerText;
}
function createVideoShit(){
	var videoEl=document.querySelector("#project-video-file");
	videoEl.pause();
	videoEl.removeAttribute('src');
	videoEl.load();
	videoEl.setAttribute("src",projectVideo);
	videoEl.load();
}
function createMoveAnim(id,to,dur,begin,ease,listener){
	var animation = document.createElement("a-animation");
		animation.setAttribute("id",id);
    	player.setAttribute('anim-listener','listener',listener);
        animation.setAttribute("attribute","position");            
        animation.setAttribute("to",to);
        animation.setAttribute("dur",dur*speedMult);
        animation.setAttribute("begin",begin);
        animation.setAttribute("easing",ease); 
    	player.appendChild(animation);
}
function createCorridorAnim(obj,id,to,dur,begin,ease,listener){
	var broh="0 0 "+to;
	var animation = document.createElement("a-animation");
		animation.setAttribute("id",id);
    	obj.setAttribute('anim-listener','listener',listener);
        animation.setAttribute("attribute","rotation");            
        animation.setAttribute("to",broh);
        animation.setAttribute("dur",dur);
        animation.setAttribute("begin",begin);
        animation.setAttribute("easing",ease); 
    	obj.appendChild(animation);
}
function createChamberAnimation(_id,_parent,_attribute,_begin,_end,_to,_dur,_listener){
	var anim = document.createElement("a-animation");
		anim.setAttribute("id",_id);
		anim.setAttribute("attribute",_attribute); 
		anim.setAttribute("begin",_begin);
		anim.setAttribute("end",_end);
		anim.setAttribute("to",_to);
		anim.setAttribute("dur",_dur);
		if(_listener!='') _parent.setAttribute('anim-listener','listener',_listener);
		_parent.appendChild(anim);			
}
function createChamberEntity(_id,_parent,_geometry,_position,_rotation,_material,_class,_enter,_scale){
	var someshit = document.createElement("a-entity");
		someshit.setAttribute("id",_id);
		if(_geometry.charAt(0)=="#"){
			someshit.setAttribute("gltf-model",_geometry);     
		}else if(_geometry.indexOf("value")>=0){
			someshit.setAttribute("text",_geometry);
		}else{
			if(_geometry!='') {
				someshit.setAttribute("geometry",_geometry);			
			}
		}		
		if(_position!='') someshit.setAttribute("position",_position); 
		if(_rotation!='') someshit.setAttribute("rotation",_rotation);
		if(_scale!='') someshit.setAttribute("scale",_scale);
    	if(_material!='') someshit.setAttribute("material",_material);   
    	if(_class!='') someshit.setAttribute("class",_class);
        if(_enter!='') someshit.addEventListener('mouseenter',handleChamberEnter);
	    if(_enter!='') someshit.addEventListener('mouseleave',handleChamberLeave);
    	if(_enter!='') someshit.addEventListener('click', eval('handle'+_enter+'Clicked'));
    	_parent.appendChild(someshit);
    	return someshit;
}
function createChamberImage(_id,_parent,_src,_position,_rotation,_width,_height,_class,_side){
	var im=document.createElement("a-image");
		im.setAttribute("id",_id);			
		if(_class!='') im.setAttribute("class",_class);
		if(_src!='') im.setAttribute("src",_src);
		if(_width!='') im.setAttribute("width",_width);
		if(_height!='') im.setAttribute("height",_height);    				
		if(_position!='') im.setAttribute("position",_position);
		if(_rotation!='') im.setAttribute("rotation",_rotation);
		if(_side!='') im.setAttribute("side",_side);		
		_parent.appendChild(im);
    	return im;
}
function createChamberObjects(event){
	ch=document.querySelector("#chamber");
	for(var i=0;i<projects.length;i++){
		var pos = (-0.5+i%3*0.5)+" "+(.3+Math.floor(i/3)*0.3)+" "+(-1.95);
		var projectOptions={
			'id': 'project'+i,
			'class': 'Projects',
			'index':i,
			'amount': projects.length,
			'geometry': 'primitive:plane;width:.46;height:.25875',
			'material': '#category-background-mat',
			'hover': '#category-background-hover',
			'position': pos,
			'title': projects[i].title,
			'image':wrangleImageSource(projects[i].mainImage)
		};
		evil.createEntityWithComponent("frame",ch,projectOptions);
	}	
	/*var ti=createChamberEntity("chamber-sign1",ch,"align:center; value:"+categories[category-1]+"; width: 1.6; height: auto; color: #333;","0 0.04 -1.45",'','','chamber-signs','','0 0 0');
		createChamberAnimation("chamber-sign-fade-in0",ti,"scale","fade-in","fade-stop","1 1 1","500",'handleSignsRevealed');

	var tiba=createChamberEntity("chamber-sign0",ch,"primitive:plane;width:.66;height:.17","-.0005 .0375 -1.45",'',"color:#999",'chamber-signs','','0 0 0');		
		createChamberAnimation("chamber-sign-fade-in1",tiba,"scale","fade-in","fade-stop","1 1 1","500",handleSignsRevealed);	*/
		var signOptions={
			'id': 'chamber-sign',
			'class': 'chamber-signs',			
			'geometry': 'primitive:plane;width:.66;height:.17',
			'title':'align:center; value:'+categories[category-1]+'; width: 1.6; height: auto; color: #333;',
			'position': '0 0.04 -1.45',
			'autostart':true
		};
		evil.createEntityWithComponent("chamber_sign",ch,signOptions);
		
	posCounter=1;
	for(var i=0;i<categories.length;i++){
		if(i==category-1) continue;	
		var pos = 1.8+" "+(1.0+Math.floor(posCounter/2)*-0.3)+" "+(-0.9+posCounter%2*0.5);
		posCounter++;			
		
		var categoriesOptions={
			'id': 'chamber-category'+(i+1),
			'class': 'Categories',
			'index':i,
			'amount': categories.length,
			'geometry': 'primitive:plane;width:.46;height:.25875',
			'material': '#category-background-mat',
			'hover': '#category-background-hover',
			'position': pos,
			'rotation': '0 -90 0',
			'title': categories[i]
			//'image':wrangleImageSource(projects[i].mainImage)
		};
		evil.createEntityWithComponent("frame",ch,categoriesOptions);
	}	
	var categoriesTitleOptions={'id': 'chamber-category0','title': 'align:left; value:Other\nsections:; width: 2.5; height: auto; color: white;',
	'position': '1.8 1.03 0.1','rotation': '0 -90 0','class': 'chamber-categories'};
	evil.createEntityWithComponent("chamber_title",ch,categoriesTitleOptions);

	/*var caba = createChamberEntity("chamber-cat-wall",ch,"primitive:plane;width:1.08;height:1.4","1.85 .51 -0.66","0 -90 0","color:#ffc800",'','','1 0 1');
	createChamberAnimation("chamber-cat-wall-fade-in",caba,"scale","slide-in","fade-stop","1 1 1","1000",handleCatWallRevealed);*/
	
	/*var exba=createChamberEntity("chamber-exit-b",ch,"primitive:plane;width:0.325;height:1.3","-1.85 0.7 -0.97","0 90 0","src:#exit-background-mat","clickable","Exit",'0 0 1');
		createChamberAnimation("chamber-exit-back-fadein",exba,"scale","fade-in","fade-stop","1 1 1","1000",'');

	var exti=createChamberEntity("chamber-exit-title",ch,"align:left; value:EXIT; width: 6; height: auto; color: white;","-1.8 3.4 -0.97","0 90 90","color:#333",'','','0 0 1'); 
		createChamberAnimation("chamber-exit-title-fadein",exti,"scale","fade-in","fade-stop","1 1 1","1000",'');

	var prtiba=createChamberEntity("project-title-background",ch,"primitive:plane;width:1.6;height:.17","0.0 1.1 -4.0",'',"color:#000",'','','0 0 1');
		createChamberAnimation("project-title-back-slidein",prtiba,"position","fade-in","fade-stop","0.0 1.1 -1.92","2500",'');
		createChamberAnimation("project-title-back-fadein",prtiba,"scale","fade-in","fade-stop","1 1 1","2000",'');
		createChamberAnimation("project-title-back-fadeout",prtiba,"scale","back-clicked","back-stop","0 0 0","2000",'');	*/	

	/*var prte=createChamberEntity("project-text",ch,"align:left; value:; baseline:center;width:0.53;wrapCount:34; height: auto; color: #333;","0.95 0.39 -1.32","0 -45 0","color:#999",'','',"0 0 0");
		prte.setAttribute("geometry","primitive:plane;width:auto;height:auto");
		createChamberAnimation("project-text-fadein",prte,"scale","fade-in","fade-stop","1 1 1","1000",'');		
		createChamberAnimation("project-text-fadeout",prte,"scale","back-clicked","back-stop","0 0 0","1000",'');*/
	
		numOfImages=6;
	for(var i=0;i<numOfImages;i++){
		var imgPos = (-0.5+i%3*0.5)+" "+(.3+Math.floor(i/3)*0.3)+" "+(-1.95),
		primgr=createChamberEntity("project-images-group"+i,ch,"primitive:plane;width:.46;height:.23",imgPos,'',"src:#images-background-mat","project-images-groups",'',"0 0 0");
			createChamberImage("project-images-"+i,primgr,'',"0 0 0.0001",'',"0.43","0.21","project-imagess",'');
			createChamberAnimation("pr-im-gr-fadein"+i,primgr,"scale","fade-in","fade-stop","1 1 1","2000",''); 	
			createChamberAnimation("pr-im-gr-fadeout"+i,primgr,"scale","fade-out","fade-stop","0 0 0","500",''); 	
	}

	var baba1=createChamberEntity("chamber-back-background0",ch,"primitive:plane;width:0.36;height:0.18","-0.74 0.0 -1.41","0 45 0","src:#back-background-mat","clickable","Back",'0 0 1');		
		createChamberEntity("chamber-back-title0",baba1,"align:center; value:BACK; width: 1.8; height: auto; color: white;","0.03 0 0.005",'',"color:#333",'','',''); 
		createChamberAnimation("chamber-exit-back-fadein0",baba1,"scale","fade-in","fade-stop","1 1 1","1000",'');
		createChamberAnimation("chamber-exit-back-fadeout0",baba1,"scale","fade-out","fade-stop","0 0 0","500",'');

	var baba2=createChamberEntity("chamber-back-background1",ch,"primitive:plane;width:0.36;height:0.18","0.74 0.0 -1.41","0 -225 0","src:#back-background-mat;side:double","clickable","Back",'0 0 1');		
		createChamberEntity("chamber-back-title1",baba2,"align:center; value:BACK; width: 1.8; height: auto; color: white;","0.03 0 -0.005","0 180 0","color:#333",'','',''); 
		createChamberAnimation("chamber-exit-back-fadein1",baba2,"scale","fade-in","fade-stop","1 1 1","1000",'');
		createChamberAnimation("chamber-exit-back-fadeout1",baba2,"scale","fade-out","fade-stop","0 0 0","500",'');

	var vifi=document.createElement("video");
		vifi.setAttribute("id","project-video-file");
		vifi.setAttribute("autoplay","");
		vifi.setAttribute("mute","");
		vifi.setAttribute("loop","true");
		vifi.setAttribute("src","/videos/small_video.mp4");
		assets.appendChild(vifi);	

/*
var vifi=document.createElement("video");
		vifi.setAttribute("id","project-video-file");
		vifi.setAttribute("autoplay","");
		vifi.setAttribute("mute","");
		vifi.setAttribute("loop","true");
		var sour=document.createElement("source");
		sour.setAttribute("src","/videos/small_video.mp4");
		sour.setAttribute("type","video/mp4");
		vifi.appendChild(sour);	
		assets.appendChild(vifi);*/

var vi=document.createElement("a-video");
		vi.setAttribute("id","project-video");
		vi.setAttribute("src","#project-video-file");
		vi.setAttribute("width",".7");
		vi.setAttribute("height","0.39375");
		vi.setAttribute("position","-0.8 0.35 -1.6");
		vi.setAttribute("rotation","0 45 0");
		vi.setAttribute("scale","0 0 0");
		createChamberAnimation("pr-video-fadein",vi,"scale","fade-in","fade-stop","1 1 1","1000",''); 	
		createChamberAnimation("pr-video-fadeout",vi,"scale","fade-out","fade-stop","0 0 0","500",'handleProjectVideoFadeOut'); 
	ch.appendChild(vi);				

	/*animCounter=0;
	numOfChamberSigns=$(".chamber-signs").length;
	animateObjects(1,"chamber-sign",numOfChamberSigns);*/
	//console.log("ch.querySelector('#chamber-sign-back')"+ch.querySelector("#chamber-sign-back"));
	//document.querySelector("#chamber-sign-back").emit('fade-in',null,false); 
}
function createCorridors(event){
	var sce=event.target.sceneEl;
	sce.removeChild(sce.querySelector('#corridor-0'+category));
	var ch = document.createElement("a-entity");
		ch.setAttribute("id","corridors");
		playerToString=wrangleDestination(-4.16,4.386,-4.877,-1.445,.426,-5.865);		
		var playerRotation=wrangleRotation(-135,-135);		
    	ch.setAttribute("position",playerToString);
    	ch.setAttribute("rotation",playerRotation);          
        event.target.sceneEl.appendChild(ch);
        for(var i=0;i<2;i++){
	        var co = document.createElement("a-entity");
			co.setAttribute("id","chamber-corridor-0"+(i+1));
			co.setAttribute("position","0 0 "+(-1.125+(i+2)*.75));            
	        co.setAttribute("gltf-model","#corridor");
	        createCorridorAnim(co,'corridor-anim-0'+(i+1),180,1000,'go-corridor-anim-0'+(i+1),'linear','handleCorridorRotation');			
	        ch.appendChild(co);	        
        }        
}
function killPreviousAnimation(animation){
	var prevAnim=player.querySelector(animation);    	
 	player.removeChild(prevAnim);
 	player.removeAttribute('anim-listener');
}
var animCounter = 0;
function animateObjects(direction,stringo,lengtho,indexToAvoid) {
	//console.log("animating this: "+stringo+" counter: "+animCounter+" lengtho: "+lengtho+" avoiding: "+indexToAvoid);
	var timeToWait=200;
	if(!isNaN(indexToAvoid) && animCounter==indexToAvoid){
		timeToWait=0;
	}else{
		if(direction>0){
			document.querySelector("#"+stringo+animCounter).emit('fade-in',null,false);  	
		}else{
			document.querySelector("#"+stringo+animCounter).parentNode.emit('fade-out',null,false);
		}	
	}	
    animCounter++;
    if( animCounter < lengtho ){
    	setTimeout( function() {animateObjects(direction,stringo,lengtho,indexToAvoid)},timeToWait);
    }	
}
/////////////////////////////////////
//WRANGLE fucking functions
/////////////////////////////////////
function wrangleDestination(x1,y1,z1,x2,y2,z2){
		var x=x1,y=y1,z=z1,modCat=(category-1)%4;
		if(category>5) y=y2;
		if(modCat>0&&modCat<3) {x=x2;z=z2;}
		if(modCat>1)x*=-1;
		return x+" "+y+" "+z+" ";
}
function wrangleRotation(z1,z2){
	var modCat=(category-1)%4,y=30,z=z1;
		if(modCat>0&&modCat<3) y=10;
		if(modCat>1) {y*=-1;z=z2;}
		return 0+" "+y+" "+z;
}
function wrangleImageSource(source){
	//from:
	//euphoricblast/6tutuytutu/euphoricblast-6tutuytutu-mainImage-1523467012837

	//to:
	//http://res.cloudinary.com/dtrroywwa/image/upload/c_fill,g_center,h_328,w_auto/v1/euphoricblast/6tutuytutu/euphoricblast-6tutuytutu-mainImage-1523467012837.jpg
	var result="http://res.cloudinary.com/dtrroywwa/image/upload/c_crop,g_center,h_256,w_512/v"+source.version+"/"+source.public_id+".jpg";
	return result;
}
function wrangleAnimNumber(animID){
	var animNum=animID.charAt(animID.length-1),
	prevChar=animID.charAt(animID.length-2);
	if(!isNaN(prevChar)) animNum =prevChar+animNum;
	animNum=Number(animNum); return animNum; 
}
/////////////////////////////////////
//EVENT Handlers
/////////////////////////////////////
function handleCatEnter () {
	par=this.parentElement;
	par.querySelector('.category-background').setAttribute('material','src','#category-background-hover');
	par.querySelector('.category-title').setAttribute('text','color','black');
	outterRing.emit('circle-reveal',null,false);    	
	var imageChild=par.querySelector('.category-image');
	if(imageChild!==null){
		imageChild.emit('hover',null,false);    		
	}
}
function handleCatLeave () {
	par=this.parentElement;
	par.querySelector('.category-background').setAttribute('material','src','#category-background-mat');
	par.querySelector('.category-title').setAttribute('text','color','white');
	outterRing.emit('circle-stop',null,false);
	outterRing.setAttribute('theta-length', 0);
	var imageChild=par.querySelector('.category-image');
	if(imageChild!==null){
  		imageChild.emit('hover-stop',null,false);  		
  		imageChild.setAttribute('scale', '1 1 1');
	}
}
function handleChamberEnter (event) {
	var currentID=event.target.id;
	if(currentID.indexOf("roj")>0){
		this.setAttribute('material','src','#category-background-hover');
	}else if(currentID.indexOf("ack")>0){
		this.setAttribute('material','src','#back-background-hover');
	}else if(currentID.indexOf("xit")>0){
		this.setAttribute('material','src','#exit-background-hover');	
	}	
	outterRing.emit('circle-reveal',null,false);	
}
function handleChamberLeave () {
	var currentID=event.target.id;	
	if(currentID.indexOf("roj")>0){
		this.setAttribute('material','src','#category-background-mat');
	}else if(currentID.indexOf("ack")>0){
		this.setAttribute('material','src','#back-background-mat');
	}else if(currentID.indexOf("xit")>0){
		this.setAttribute('material','src','#exit-background-mat');	
	}
	outterRing.emit('circle-stop',null,false);
	outterRing.setAttribute('theta-length', 0);
}
function handleCorridorRotation () {
	console.log("finished rotating the corridor");
}
function handleCatClicked (event) {
    par=this.parentElement;
    console.log('I was clicked at: ', event.detail.intersection.point);
    //TODO: only works with up to 9 CATEGORIES!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	category=Number(par.id.charAt(4));
	getCategoryData(event);
	par.querySelector('.category-background').setAttribute('material','src','#category-background-hover');
	//TODO: Reset this
	par.querySelector('.category-background').setAttribute('material', 'color', '#fcc800');
	var imageContainer = par.querySelector('.category-image-container');
	if(imageContainer!==null){
		par.querySelector('.category-image-container').emit('clicked');	
	}else{
		par.querySelector('.category-background-container').emit('clicked');
		par.querySelector('.category-title').setAttribute('visible','false');
	}
	var allButtons=document.querySelectorAll('.category-button')
	for(var i=0;i<allButtons.length;i++){
		allButtons[i].removeAttribute('category-listener');
		allButtons[i].classList.remove("clickable");
	}	
	outterRing.emit('circle-stop');
	outterRing.setAttribute('theta-length', 0);
	var playerTo=par.getAttribute('position');
	//TODO: find more elegant way of doing this... maybe
	playerToString=playerTo.x+" "+playerTo.y+" "+playerTo.z;
	createMoveAnim('move-cat-anim',playerToString,2000,'move-cat','linear','handleCatFly');
	player.emit('move-cat');
}
function handleProjectClicked (event) {
	console.log("handleProjectclicked");
	var parent=event.target.parentNode,
    projectId=parent.id;
    if(parent.id.length<9) projectIndex=Number(projectId.charAt(7));
    if(parent.id.length>8) projectIndex=Number(projectId.charAt(7)+projectId.charAt(8));
    outterRing.emit('circle-stop');
	outterRing.setAttribute('theta-length', 0);
	animCounter=0;
	//animateObjects(-1,"project-background",numOfProjects,projectIndex);
	var projos=ch.querySelectorAll(".Projects");
		for (var i=0;i<projos.length;i++){
			projos[i].emit('fade-out',null,false);
		}
	var currentProject=projects[projectIndex];
	getProjectVideo(event,currentProject.video);
	numOfImages=Math.min(6,currentProject.images.length);
	for(var i=0;i<numOfImages;i++){
		ch.querySelector("#project-images-"+i).setAttribute("src",wrangleImageSource(currentProject.images[i]));
	}	
	var projectText=ch.querySelector("#project-text");
	projectText.setAttribute("text_plane","content",strip(currentProject.content.extended));
	
	var heighto=projectText.getAttribute("geometry").height,
	currentImage=parent.querySelector(".project-images"),
	currentBackground=parent.querySelector(".project-backgrounds"),

	imageAnim=currentImage.querySelector("#pr-im-pos-cli-"+projectIndex);
	if(imageAnim!==null) currentImage.removeChild(imageAnim);
	createChamberAnimation("pr-im-pos-cli-"+projectIndex,currentImage,"position","project-clicked","project-stop","0.95 "+(heighto-0.65)+" 0.635","2000",'');	
	imageAnim=currentBackground.querySelector("#pr-ba-pos-cli-"+projectIndex);

	if(imageAnim!==null) currentBackground.removeChild(imageAnim);
	createChamberAnimation("pr-ba-pos-cli-"+projectIndex,currentBackground,"position","project-clicked","project-stop","0.95 "+(heighto-0.65)+" 0.63","2000",'');
	
	parent.emit('project-clicked',null,false); 
	projectText.emit('fade-in',null,false);
	ch.querySelector("#project-title-background").emit('fade-in',null,false);
	parent.querySelector(".project-titles").emit('project-clicked',null,false); 	
	parent.querySelector(".project-backgrounds").emit('project-clicked',null,false);
	currentImage.emit('project-clicked',null,false); 
}
function handleExitClicked (event) {
    outterRing.emit('circle-stop',null,false);
	outterRing.setAttribute('theta-length', 0);
	//player.emit('move-cat');
}
function handleBackClicked (event) {
	ch.querySelector("#project-image"+projectIndex).emit("back-clicked");
	var imagesArr=ch.querySelectorAll(".project-images-groups")
		for (var i=0;i<numOfImages;i++){
			console.log("fading out image");
			imagesArr[i].emit('fade-out',null,false);
		}
	if(projectHasVideo) ch.querySelector("#project-video").emit("fade-out");
	ch.querySelector("#project-title"+projectIndex).emit("back-clicked");
	ch.querySelector("#project-text").emit("fade-out");
	ch.querySelector("#project-title-background").emit("back-clicked");
	ch.querySelector("#project-background"+projectIndex).emit("back-clicked");
	ch.querySelector("#chamber-back-background0").emit('fade-out',null,false);
	ch.querySelector("#chamber-back-background1").emit('fade-out',null,false);
    outterRing.emit('circle-stop',null,false);
	outterRing.setAttribute('theta-length', 0);
}
function handleProjectVideoFadeOut(event){	
	if(event.target.getAttribute("begin")=="fade-out"){
		console.log("removing project video file as we clicked back");
		document.querySelector("#project-video-file").pause();
	}	
}
function handleCategoryClicked (event) {
    outterRing.emit('circle-stop',null,false);
	outterRing.setAttribute('theta-length', 0);
	//player.emit('move-cat');
}
function handleProjectTitleAnimations(event){
	var animID=event.target.id;
	if(animID.startsWith("reverse")){		
		console.log("handleProjectTitleAnimations reverse");	
		var projos=ch.querySelectorAll(".Projects");
		for (var i=0;i<projos.length;i++){
			var pos = (-0.5+i%3*0.5)+" "+(.3+Math.floor(i/3)*0.3)+" "+(-1.95);	    	
			var moveBackAnim=projos[i].querySelector("#pr-back-to-place-"+i);
			if(moveBackAnim!==null) projos[i].removeChild(moveBackAnim);
		  	createChamberAnimation("pr-back-to-place-"+i,projos[i],"position","move-back","move-stop",pos,"1000",'');    		
			projos[i].emit('move-back',null,false);
		}
	}else if(animID.startsWith("reveal")){
		//console.log("handleProjectTitleAnimations reveal clicked project");	
		if(numOfImages>0){
			animCounter=0;animateObjects(1,"project-images-group",numOfImages,'A');
		}
		if(projectHasVideo) ch.querySelector("#project-video").emit("fade-in");
		ch.querySelector("#chamber-back-background0").emit('fade-in',null,false);
		ch.querySelector("#chamber-back-background1").emit('fade-in',null,false);
	}	
}
function handleSignsRevealed(event){
	var thisNum=wrangleAnimNumber(event.target.id);
	if(thisNum==numOfChamberSigns-1){
		animCounter=0;animateObjects(1,"project",numOfProjects,'A');
	}
}
/*function handleProjectsAnimations(event){
	var animID=event.target.id;
	if(animID.startsWith("pr-r")){
		var thisNum=wrangleAnimNumber(event.target.id);	
		if(thisNum==numOfProjects-1){
			document.querySelector("#chamber-cat-wall").emit("slide-in",null,false);
		}
	}		
}*/
function handleCatWallRevealed(event){
	animCounter=0;animateObjects(1,"chamber-category",numOfCategories+1,category);
}
function handleCategoriesRevealed(event){
	var thisNum=wrangleAnimNumber(event.target.id);	
		if(thisNum==numOfCategories-1){		
			document.querySelector("#chamber-exit").emit('fade-in',null,false); 
			document.querySelector("#chamber-exit-title").emit('fade-in',null,false); 
			document.querySelector("#chamber-exit-b").emit('fade-in',null,false); 
		}	
}
function handleCatAnim (event) {
	par=this.parentElement;	var classes=event.target.classList;
	if(classes.contains("clicked-image")){		
		par.querySelector('.category-background-container').emit('clicked',null,false);
		par.querySelector('.category-title').setAttribute('visible','false');
	}  else if(classes.contains("clicked-background")){		
		var screensArr=par.querySelectorAll('.category-screens');
    	for(var i=0;i<screensArr.length;i++){
    		screensArr[i].emit('clicked',null,false);
		}
	} 
}
function handleCatFly (event) {
	console.log("finished cat flying ");	
    killPreviousAnimation('#move-cat-anim');
    player.querySelector('#main-camera').setAttribute('near', 0.03);
    playerToString=wrangleDestination(-3.33,4.386,-3.439,-1.156,.426,-4.230);
    createMoveAnim('move-tunnel-anim',playerToString,3000,'move-tunnel','linear','handleTunnelFly');
    createCorridors(event);
    player.emit('move-tunnel',null,false);
}	
function handleTunnelFly (event) {
	console.log("finished flying the tunnel");   
    killPreviousAnimation('#move-tunnel-anim');
    playerToString=wrangleDestination(-4.525,4.386,-5.508,-1.571,.426,-6.581);
    createMoveAnim('move-corridor-anim',playerToString,3000,'move-corridor','linear','handleCorridorFly');
    //createChamber(event);
    var pos=wrangleDestination(-4.22,3.95,-4.97,-1.46,0.0,-5.95),
	rot=wrangleRotation(0,0);

	
    evil.createEntityWithComponent("chamber", event.target.sceneEl,{'id':'chamber','projects':projects,'position':pos,'rotation':rot});
    
    player.emit('move-corridor',null,false);
    document.querySelector('#chamber-corridor-01').emit('go-corridor-anim-01',null,false);
    //document.querySelector('#chamber-corridor-02').emit('go-corridor-anim-02');
}
function handleCorridorFly (event) {
	console.log("finished flying the corridor");
	killPreviousAnimation('#move-corridor-anim');
	createChamberObjects(event);
	//document.querySelector("#chamber-sign-back").emit('fade-in',null,false);
}
/////////////////////////////////////
//AJAX bullshit
/////////////////////////////////////
function getCategoryData(evt){	
	$.ajax({
      type: 'POST',
      data: {
        message: "next_page_yo",
        cat: category
      },
      dataType: 'json'
	});
}
function getProjectVideo(evt,videoURL){		
	if(videoURL!=''&&videoURL!==null){
		console.log("request project video broh");
		$.ajax({
	      type: 'POST',
	      data: {
	       'message':'scrape_the_fuck_outta_vimeo',
	       'originalVideoURL': videoURL
	      },
	      dataType: 'json'
		});	
	}else{
		projectHasVideo=false;
	}	
}

/////////////////////////////////////
//AFRAME custom component
/////////////////////////////////////
AFRAME.registerComponent('log', {
  schema: {type: 'string'},
  init: function () {
    var stringToLog = this.data;
    console.log(stringToLog);
  }
});
AFRAME.registerComponent('anim-listener', {
	schema: {listener:{type: 'string'}},
	remove: function () {
		this.el.removeEventListener('animationend',eval(this.data.listener)); 
	},
	init: function () {		
		this.el.addEventListener('animationend',eval(this.data.listener)); 
	}
}); 
AFRAME.registerComponent('category-listener',{
	dependencies: ['evil'],
	remove: function () {
		this.el.removeEventListener('mouseenter', handleCatEnter);
	    this.el.removeEventListener('mouseleave', handleCatLeave);
    	this.el.removeEventListener('click', handleCatClicked);
	},
  	init: function () {
  		this.el.addEventListener('mouseenter', handleCatEnter);
	    this.el.addEventListener('mouseleave', handleCatLeave);
    	this.el.addEventListener('click', handleCatClicked);
	}
});
</script>
<section id="a-frame">
	<a-scene stats light="defaultLightsEnabled: false" effects="ssao,fxaa,film" 
			ssao="samples:32;rings:7;radius:.03; ratio:1; intensity: 0.5; maxDepth:.99;bias:.05;scale:1; blurRadius:5;depthCutoff: 1000"
			fxaa="true"	film="sIntensity: 0.3; nIntensity: 0.1"
			fog="type:linear; color:#ECECEC; near:0; far:8;">
		<a-assets>
	    	<a-asset-item id="main-scene" src="/models/EB_main_scene.glb"></a-asset-item>
	    	<a-asset-item id="screen" src="/models/EB_screen.glb"></a-asset-item>	    	
	    	<a-asset-item id="chamber-stage-model" src="/models/EB_chamber_stage.glb"></a-asset-item>
	    	<a-asset-item id="chamber-walls-model" src="/models/EB_chamber_walls.glb"></a-asset-item>
	    	<a-asset-item id="chamber-exit-model" src="/models/EB_chamber_exit.glb"></a-asset-item>
	    	<a-asset-item id="chamber-door-model" src="/models/EB_chamber_door.glb"></a-asset-item>
	    	<a-asset-item id="corridor" src="/models/EB_corridor.glb"></a-asset-item>
	    	<img id="category-background-mat" src="/images/category_back.jpg"></a-asset-item>	    	
	    	<img id="images-background-mat" src="/images/images_back_512x256.jpg"></a-asset-item>
	    	<img id="images-background-hover" src="/images/images_back_512x256.jpg"></a-asset-item>
	    	<img id="back-background-mat" src="/images/back_background_512x256.jpg"></a-asset-item>
	    	<img id="back-background-hover" src="/images/back_background_hover_512x256.jpg"></a-asset-item>
	    	<img id="exit-background-mat" src="/images/exit_background_1024x256.jpg"></a-asset-item>
	    	<img id="exit-background-hover" src="/images/exit_background_hover_1024x256.jpg"></a-asset-item>
	    	<img id="category-background-hover" src="/images/category_back_hover.jpg"></a-asset-item>
		</a-assets>		
		<!--CAMERA-->
		<a-entity position="-1 2.4 3" id="player">
			<a-camera id="main-camera" wasd-controls-enabled="true" near=".1" fov="70">
				<a-entity id="curso" cursor="fuse: true; fuseTimeout: 500" position="0 0 -1"
            	geometry="primitive: ring; radiusInner: 0.01; radiusOuter: 0.02"
            	material="color: black; shader: flat" 
            	raycaster="far: 20; interval: 100; objects: .clickable"></a-entity>
            	<a-ring id="outter-ring" position="0 0 -1" color="white" radius-inner="0.04" radius-outer="0.06" material="shader: flat" theta-length="0">
            		<a-animation id="circle-reveal" attribute="theta-length" begin="circle-reveal" end="circle-stop" to="360" dur="500" easing="linear"></a-animation>
            	</a-ring>
			</a-camera>			
		</a-entity>		
		<!--CATEGORIES-->	
		{{#each data.categories}}
		<a-entity class="category-container" id="cat-{{add @index 1}}" position="{{AFgetCategoriesPos @index 0 0}}" rotation="{{AFgetCategoriesRot @index 0 0}}">
			<!--CATEGORY PLANE-->	
			<a-entity category-listener class="category-button clickable" geometry="primitive:plane;width:.69;height:.5" position="0 0 0.003" visible="false"></a-entity>
			<a-entity anim-listener="listener:handleCatAnim" class="category-background-container" position="0 -.25 0.003">
				<a-entity class="category-background" geometry="primitive:plane;width:.69;height:.5" position="0 .25 0" material="src:#category-background-mat"></a-entity>
				<a-animation class="clicked-background" attribute="scale" begin="clicked" end="clicked-stop" from="1 1 1" to="1 0 1" dur="400" easing="linear"></a-animation>
			</a-entity>			
			<!--CATEGORY SCREENS-->	
			<a-entity class="category-screens" position="-.345 0.25 -0.014" gltf-model="#screen" material="roughness: 1; metalness: 0">
				<a-animation class="clicked-screen" attribute="scale" begin="clicked" end="clicked-stop" from="1 1 1" to="0 0 1" dur="500" easing="linear"></a-animation>
			</a-entity>
			<a-entity class="category-screens" position=".345 -0.25 -0.014" rotation="0 0 180" gltf-model="#screen" material="roughness: 1; metalness: 0">
				<a-animation class="clicked-screen" attribute="scale" begin="clicked" end="clicked-stop" from="1 1 1" to="0 0 1" dur="500" easing="linear"></a-animation>
			</a-entity>
			<!--CATEGORY TITLE-->	
			<a-entity class="category-title" position=".54 0.18 0.005" text="value: {{name}}; width: 1.7; height: auto; color: white;"></a-entity>			
			{{#each ../data.featuredPosts}}
				{{#ifPostIsInCategory categories ../name}}
					{{#if mainImage.exists}}	
						<!--CATEGORY IMAGE-->
						<a-entity anim-listener="listener:handleCatAnim" class="category-image-container" position="0 .1355 0.0031" material="src:#category-background-mat">
							<a-image class="category-image" src="{{cloudinaryUrl mainImage width='960' height='540' q='70' crop='fill' gravity='center'}}" width=".6" height=".3375" position="0 -.1755 0">
							<a-animation class="hover" attribute="scale" begin="hover" end="hover-stop" from="1 1 1" to="1.07 1.04 1.07" dur="400" easing="linear"></a-animation>
							</a-image>
							<a-animation class="clicked-image" attribute="scale" begin="clicked" end="clicked-stop" to="1 0 1" dur="500" easing="linear"></a-animation>
						</a-entity>
					{{/if}}	
				{{/ifPostIsInCategory}}
			{{/each}}					
		</a-entity>
		<a-box id="corridor-0{{add @index 1}}" depth="3" width=".4" height=".4" position="{{AFgetCorridorsPos @index -4.16 4.386 -4.877 -1.445 0.426 -5.865}}" rotation="{{AFgetCategoriesRot @index -144 -126}}" material="color: white"></a-box>
		{{/each}}
		<!--SECTION TITLES-->
		<a-entity rotation="-45 0 0" position=".89 .99 1.365" text="value: Work; width: 2; height: auto"></a-entity>
		<!--MAIN SCENE-->
		<a-entity id="main-scene" position="0 0 0" gltf-model="#main-scene" material="roughness: 1; metalness: 0"></a-entity>		
		<!--SKY-->
		<a-sky color="#ECECEC"></a-sky>		
		<!--LIGHTS-->
		<a-entity light="type: ambient; color: #BBB; intensity: 0.6"></a-entity>
		<a-entity light="type: directional; color: #FFF; intensity: 0.6" position="-0.5 1 1"></a-entity>
		<!-- RENDER HTML AS TEXTURE EXAMPLE
		<a-entity geometry="primitive:plane;width:.69;height:.5" position="0 0 0.003" material="shader:html;target:#category-back;fps:1;" class="category-background"></a-entity>-->
    </a-scene>
    <!-- RENDER HTML AS TEXTURE EXAMPLE		
	<div id="category-back" style="width: 512px; height: 256px; position: fixed; left: 500px; top: 0; z-index: -1; overflow: hidden;background-color:#333;">
		<div class="category-col">
				<div class="side-line"></div>
		</div>	
	</div>-->
</section>