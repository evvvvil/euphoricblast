<script>
var category=0,outterRing,player,playerToString,par;
window.onload = function () {	
	outterRing=document.querySelector('#outter-ring');
	player=document.querySelector('#player');
}
function createMoveAnim(id,playerToString,dur,begin,ease,listener){
	var animation = document.createElement("a-animation");
		animation.setAttribute("id",id);
    	player.setAttribute('anim-listener','listener',listener);
        animation.setAttribute("attribute","position");            
        animation.setAttribute("to",playerToString);
        animation.setAttribute("dur",dur);
        animation.setAttribute("begin",begin);
        animation.setAttribute("easing",ease); 
    	player.appendChild(animation);
}
function wrangleDestination(x1,y1,z1,x2,y2,z2){
		var x=x1,y=y1,z=z1,modCat=(category-1)%4;
		if(category>5) y=y2;
		if(modCat>0&&modCat<3) {x=x2;z=z2;}
		if(modCat>1)x*=-1;
		return x+" "+y+" "+z+" ";
}
function killPreviousAnimation(animation){
	var prevAnim=player.querySelector(animation);    	
 	player.removeChild(prevAnim);
 	player.removeAttribute('anim-listener');
}
function handleCatEnter () {
	par=this.parentElement;
	par.querySelector('.category-background').setAttribute('material','src','#category-back-hover');
	par.querySelector('.category-title').setAttribute('text','color','black');
	outterRing.emit('circle-reveal');    	
	var imageChild=par.querySelector('.category-image');
	if(imageChild!==null){
		imageChild.emit('hover');    		
	}
}
function handleCatLeave () {
	par=this.parentElement;
	par.querySelector('.category-background').setAttribute('material','src','#category-back');
	par.querySelector('.category-title').setAttribute('text','color','white');
	outterRing.emit('circle-stop');
	outterRing.setAttribute('theta-length', 0);
	var imageChild=par.querySelector('.category-image');
	if(imageChild!==null){
  		imageChild.emit('hover-stop');  		
  		imageChild.setAttribute('scale', '1 1 1');
	}
}
function handleCatClicked (event) {
    par=this.parentElement;
    console.log('I was clicked at: ', event.detail.intersection.point);
    //TODO: only works with up to 9 CATEGORIES!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	category=Number(par.id.charAt(4));
	par.querySelector('.category-background').setAttribute('material','src','#category-back-hover');
	//TODO: Reset this
	par.querySelector('.category-background').setAttribute('material', 'color', '#fcc800');
	var imageContainer = par.querySelector('.category-image-container');
	if(imageContainer!==null){
		par.querySelector('.category-image-container').emit('clicked');	
	}else{
		par.querySelector('.category-background-container').emit('clicked');
		par.querySelector('.category-title').setAttribute('visible','false');
	}
	var allButtons=document.querySelectorAll('.category-button')
	for(var i=0;i<allButtons.length;i++){
		allButtons[i].removeAttribute('category-listener');
		allButtons[i].classList.remove("clickable");
	}	
	outterRing.emit('circle-stop');
	outterRing.setAttribute('theta-length', 0);
	var playerTo=par.getAttribute('position');
	//TODO: find more elegant way of doing this... maybe
	playerToString=playerTo.x+" "+playerTo.y+" "+playerTo.z;
	createMoveAnim('move-cat-anim',playerToString,4000,'move-cat','linear','handleCatFly');
	player.emit('move-cat');
}
function handleCatAnim (event) {
	par=this.parentElement;	var classes=event.target.classList;
	if(classes.contains("clicked-image")){		
		par.querySelector('.category-background-container').emit('clicked');
		par.querySelector('.category-title').setAttribute('visible','false');
	}  else if(classes.contains("clicked-background")){		
		var screensArr=par.querySelectorAll('.category-screens');
    	for(var i=0;i<screensArr.length;i++){
    		screensArr[i].emit('clicked');
		}
	} 
} 
function handleCatFly (event) {
	console.log("finished cat flying ");	
    killPreviousAnimation('#move-cat-anim');
    player.querySelector('#main-camera').setAttribute('near', 0.01);
    playerToString=wrangleDestination(-3.33,4.386,-3.439,-1.156,.426,-4.230);
    createMoveAnim('move-tunnel-anim',playerToString,4000,'move-tunnel','linear','handleTunnelFly');
    player.emit('move-tunnel');
}	
function handleTunnelFly (event) {
	console.log("finished flying the tunnel");    
    killPreviousAnimation('#move-tunnel-anim');
    playerToString=wrangleDestination(-5.088,4.386,-6.485,-1.749,.426,-7.592);
    createMoveAnim('move-corridor-anim',playerToString,4000,'move-corridor','linear','handleCorridorFly');
    player.emit('move-corridor');
}
function handleCorridorFly (event) {
	console.log("finished flying the corridor");
	killPreviousAnimation('#move-corridor-anim'); 
}	
AFRAME.registerComponent('log', {
  schema: {type: 'string'},
  init: function () {
    var stringToLog = this.data;
    console.log(stringToLog);
  }
});
AFRAME.registerComponent('anim-listener', {
	schema: {listener:{type: 'string'}},
	remove: function () {
		this.el.removeEventListener('animationend',eval(this.data.listener)); 
	},
	init: function () {		
		this.el.addEventListener('animationend',eval(this.data.listener)); 
	}
});  
AFRAME.registerComponent('category-listener',{
	remove: function () {
		this.el.removeEventListener('mouseenter', handleCatEnter);
	    this.el.removeEventListener('mouseleave', handleCatLeave);
    	this.el.removeEventListener('click', handleCatClicked);
	},
  	init: function () {
  		this.el.addEventListener('mouseenter', handleCatEnter);
	    this.el.addEventListener('mouseleave', handleCatLeave);
    	this.el.addEventListener('click', handleCatClicked);
	}
});     
</script>
<section id="a-frame">	
	<a-scene stats log="Hello, Scene!" light="defaultLightsEnabled: false" effects="ssao,fxaa,film" 
			ssao="samples:32;rings:7;radius:.5; ratio:1; intensity: 1.5; maxDepth:.99;bias: 0.05;scale: 0.5; blurRadius: 4;depthCutoff: 1000" 
			fxaa="true"	film="sIntensity: 0.3; nIntensity: 0.1"
			fog="type: linear; color: #ECECEC;near:0;far:8;">
		<a-assets>
	    	<a-asset-item id="main-scene" src="/models/EB_main_scene.glb"></a-asset-item>
	    	<a-asset-item id="screen" src="/models/EB_screen.glb"></a-asset-item>
	    	<img id="category-back" src="/images/category_back.jpg"></a-asset-item>
	    	<img id="category-back-hover" src="/images/category_back_hover.jpg"></a-asset-item>
		</a-assets>		
		<!--CAMERA-->
		<a-entity position="-1 2.4 3" id="player">			
			<a-camera id="main-camera" wasd-controls-enabled="true" near=".1">
				<a-entity cursor="fuse: true; fuseTimeout: 2000" position="0 0 -1"
            	geometry="primitive: ring; radiusInner: 0.01; radiusOuter: 0.02"
            	material="color: black; shader: flat" 
            	raycaster="far: 20; interval: 100; objects: .clickable"></a-entity>
            	<a-ring id="outter-ring" position="0 0 -1" color="white" radius-inner="0.04" radius-outer="0.06" material="shader: flat" theta-length="0">
            		<a-animation id="circle-reveal" attribute="theta-length" begin="circle-reveal" end="circle-stop" to="360" dur="2000" easing="linear"></a-animation>
            	</a-ring>
			</a-camera>			
		</a-entity>		
		{{#each data.categories}}
		<a-entity class="category-container" id="cat-{{add @index 1}}" position="{{AFgetCategoriesPos @index 0 0}}" rotation="{{AFgetCategoriesRot @index 0}}">
			<!--CATEGORY PLANE-->	
			<a-entity category-listener class="category-button clickable" geometry="primitive:plane;width:.69;height:.5" position="0 0 0.003" visible="false"></a-entity>
			<a-entity anim-listener="listener:handleCatAnim" class="category-background-container" position="0 -.25 0.003">
				<a-entity class="category-background" geometry="primitive:plane;width:.69;height:.5" position="0 .25 0" material="src:#category-back"></a-entity>
				<a-animation class="clicked-background" attribute="scale" begin="clicked" end="clicked-stop" from="1 1 1" to="1 0 1" dur="400" easing="linear"></a-animation>
			</a-entity>			
			<!--CATEGORY SCREENS-->	
			<a-entity class="category-screens" position="-.345 0.25 -0.014" gltf-model="#screen" material="roughness: 1; metalness: 0">
				<a-animation class="clicked-screen" attribute="scale" begin="clicked" end="clicked-stop" from="1 1 1" to="0 0 1" dur="500" easing="linear"></a-animation>
			</a-entity>
			<a-entity class="category-screens" position=".345 -0.25 -0.014" rotation="0 0 180" gltf-model="#screen" material="roughness: 1; metalness: 0">
				<a-animation class="clicked-screen" attribute="scale" begin="clicked" end="clicked-stop" from="1 1 1" to="0 0 1" dur="500" easing="linear"></a-animation>
			</a-entity>
			<!--CATEGORY TITLE-->	
			<a-entity class="category-title" position=".54 0.18 0.005" text="value: {{name}}; width: 1.7; height: auto; color: white;"></a-entity>			
			{{#each ../data.featuredPosts}}
				{{#ifPostIsInCategory categories ../name}}
					{{#if mainImage.exists}}	
						<!--CATEGORY IMAGE-->
						<a-entity anim-listener="listener:handleCatAnim" class="category-image-container" position="0 .1355 0.0031" material="src:#category-back">
							<a-image class="category-image" src="{{cloudinaryUrl mainImage width='960' height='540' q='70' crop='fill' gravity='center'}}" width=".6" height=".3375" position="0 -.1755 0">
							<a-animation class="hover" attribute="scale" begin="hover" end="hover-stop" from="1 1 1" to="1.07 1.04 1.07" dur="400" easing="linear"></a-animation>
							</a-image>
							<a-animation class="clicked-image" attribute="scale" begin="clicked" end="clicked-stop" to="1 0 1" dur="500" easing="linear"></a-animation>
						</a-entity>
					{{/if}}	
				{{/ifPostIsInCategory}}
			{{/each}}					
		</a-entity>
		{{/each}}
		<!--SECTION TITLES-->
		<a-entity rotation="-45 0 0" position=".89 .99 1.365" text="value: Work; width: 2; height: auto"></a-entity>
		<!--MAIN SCENE-->
		<a-entity id="main-scene" position="0 0 0" gltf-model="#main-scene" material="roughness: 1; metalness: 0"></a-entity>
		<!--SKY-->
		<a-sky color="#ECECEC"></a-sky>		
		<!--LIGHTS-->
		<a-entity light="type: ambient; color: #BBB; intensity: 0.6"></a-entity>
		<a-entity light="type: directional; color: #FFF; intensity: 0.6" position="-0.5 1 1"></a-entity>
		<!-- RENDER HTML AS TEXTURE EXAMPLE
		<a-entity geometry="primitive:plane;width:.69;height:.5" position="0 0 0.003" material="shader:html;target:#category-back;fps:1;" class="category-background"></a-entity>-->
    </a-scene>
    <!-- RENDER HTML AS TEXTURE EXAMPLE   
	<div id="category-back" style="width: 293px; height: 212px; position: fixed; left: 0; top: 0; z-index: -1; overflow: hidden;background-color:#333;">
		<div class="category-col">
				<div class="side-line"></div>
		</div>	
	</div>-->
</section>